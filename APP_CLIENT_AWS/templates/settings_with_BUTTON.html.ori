<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->

<title>VenYa Settigns</title>

<!-- Bootstrap core CSS -->
<link href="/static/css/bootstrap.min.css" rel="stylesheet">
<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
<link href="/static/css/ie10-viewport-bug-workaround.css" rel="stylesheet">
<link href="/static/css/navbar.css" rel="stylesheet">
<script src="/static/js/ie-emulation-modes-warning.js"></script>
<link href="/static/css/arturo.css" rel="stylesheet">
<script src="https://sdk.amazonaws.com/js/aws-sdk-2.7.20.min.js"></script>
	<script type="text/javascript" src="/static/common/languages.js"></script>
</head>
<script type="text/javascript" src="/static/common/parsing.js"></script>
<script type="text/javascript">
var mySettings;

var venya_node_server = document.location.hostname;
var venya_node_port = 8888;
function init() {
parseUrl();

var action = urlParams["action"];
getCustomerFullDetails( action, urlParams["id"], function () {
customerId = customerDetails["_id"];
//console.log("customerId = " + customerId);

if ( action == "update" ) {
var updateField = urlParams["updatefield"];
setHeader("h2",updateField + " successfully updated");
}
var headerText = "SETTINGS " + unescape(customerDetails["name"].value.toUpperCase());
setHeader("h2",headerText);
setHeader("h4","These are your settings:");
settings(displaySettings);
});
}

function update(values) {
var id = values["id"];
var field = values["field"];
var oldvalue = values["oldvalue"];
var newvalue = values["newvalue"];

var xhr = new XMLHttpRequest();
var myUrl = "http://" + venya_node_server + ":" + venya_node_port + "/updateSetting?action=update&id=" + id + "&field=" + field + "&newvalue=" + newvalue;
if ( oldvalue != undefined ) myUrl += "&oldvalue=" + oldvalue;
xhr.open('GET',myUrl,true);
//xhr.setRequestHeader('Access-Control-Allow-Origin','*');
xhr.send();
xhr.onreadystatechange = processRequest;

function processRequest(e) {
if (xhr.readyState == 4) {
if (xhr.status == 200) {
console.log(xhr.responseText);
var response = JSON.parse(xhr.responseText);
var successUrl = "./settings.html?updatefield=" + response["updatefield"];
console.log(response);
for (var field in response) {
if ( field != "status" ) {
var value = response[field];
if ( value == undefined ) value = "N/A";
successUrl += "&" + field.replace(/_/,'') + "=" + value;
}
}
location.href=successUrl;
//location.href=successUrl.replace(/&$/,'');
} else {
var response = JSON.parse(xhr.responseText);
var errorUrl = "./signin.html?status=" + response["status"] + "&errormessage=" + escape(response["errormessage"]);
location.href=errorUrl;
}
}
}
}

function displaySettings(settings) {
var table = document.createElement("table");
var header = document.createElement("tr");
var headerTags = ["SETTING", "VALUE", "OPTION"];
for ( var i in headerTags ) {
var headCell = document.createElement("th");
headCell.appendChild(document.createTextNode(headerTags[i]));
header.appendChild(headCell);
}
table.appendChild(header);
for (var field in settings) {
var value = settings[field];
var newvalue;
var option;
var buttonTarget;
var row = document.createElement("tr");
//if ( typeof settings[field] == "boolean" || typeOf settings[field] == "number" ) {
//if ( typeof settings[field] in { "boolean": "boolean", "number": "number" } ) {
if ( settings[field] in booleanField ) {
//console.log(field + " is BOOLEAN / NUMBER");
option = "ON/OFF";
if ( value == 0 || value == "0" ) { value = "OFF"; newvalue = 1 }
else { value = "ON"; newvalue = 0 }
//buttonTarget = "javascript:goTo(pages.settings,{'id': "" + customerId + ""})";
buttonTarget = "javascript:update({'id': '" + customerId + "','field': '" + field + "', 'newvalue': '" + newvalue + "'})";
} else {
//console.log(field + " is STRING");
option = "EDIT";
var gotoParams = {};
gotoParams["action"] = "update";
gotoParams["id"] = customerId;
gotoParams["setting"] = field;
buttonTarget = "javascript:goTo(pages.changeSettings," + JSON.stringify(gotoParams) + ")";
//buttonTarget = "javascript:goTo(pages.changeSettings,{'id': "" + customerId + "",'setting': "" + field + ""})";
}

var cells = { "settingCell": field, "valueCell": value };
var cellsFormat = {
"valueCell": "text-align: center; padding-left: 15px; padding-right: 15px",
"settingCell": "text-align: left; padding-left: 15px; padding-right: 15px",
"optionCell": "width: 100%"
}
for ( cell in cells ) {
var myCell = document.createElement("td");
myCell.setAttribute("style",cellsFormat[cell]);
myCell.appendChild(document.createTextNode(cells[cell]));
row.appendChild(myCell);
}
/acct /bin /boot /cache /data /default /dev /etc /home /init /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /srv /sys /sysconfig /tmp /usr /var /vmlinuz /vmlinuz.old
var settingCell = document.createElement("td");
settingCell.appendChild(document.createTextNode(field));
row.appendChild(settingCell);

var valueCell = document.createElement("td");
valueCell.appendChild(document.createTextNode(value));
row.appendChild(valueCell);
pickadate.js-3.5.6/ static/ templates/
var optionCell = document.createElement("td");
optionCell.setAttribute["optionCell"];
var optionButton = document.createElement("BUTTON");
optionButton.setAttribute("id",field);

if ( field == "language" ) {
option = "SELECT";
optionButton.setAttribute("class","dropdown-toggle");
optionButton.setAttribute("data-toggle","dropdown");
optionButton.setAttribute("aria-haspopup","true");
optionButton.setAttribute("aria-expanded","false");

var ul = document.createElement("ul");
ul.setAttribute("class","dropdown-menu");
ul.setAttribute("aria-labelledby",field);

for ( var i in languages ) {
var lang = languages[i];
var li = document.createElement("li");
var link = document.createElement("a");
link.setAttribute("href","javascript:update({'id': '" + customerId + "','field': '" + field + "', 'newvalue': '" + lang + "'})");
link.appendChild(document.createTextNode(lang));
li.appendChild(link);
ul.appendChild(li);
}
optionCell.appendChild(ul);
} else {
optionButton.setAttribute("onclick", buttonTarget);
}
optionButton.appendChild(document.createTextNode(option));
optionCell.appendChild(optionButton);
row.appendChild(optionCell);

table.appendChild(row);
}
document.body.appendChild(table);
}

function settings(callback) {
var mySettings = {};
for ( field in customerDetails ) {
if ( customerDetails[field].fix == 0 ) {
mySettings[field] = customerDetails[field].value;
console.log("Adding " + field + " to settings");
}
}
if ( callback != null ) { callback(mySettings) }
else { createDataTable(mySettings) }
}

function onoff(id,field) {

}
</script>
<header>
</header>
<body>
<div class="dropdown">
<button class="btn btn-default dropdown-toggle pull-right" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
MENU
<span class="caret"></span>
</button>
<ul class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenu1">
<!-- <li><a href="./home.html?action=home&name=Arturo">Home</a></li> -->
<li><a href="javascript:goTo(pages.home,{'action': 'home', 'id': customerId})">Home</a></li>
<li><a href="javascript:goTo(pages.appointments)">Appointments</a></li>
<li><a href="javascript:goTo(pages.notifications)">Notifications</a></li>
<li><a href="javascript:goTo(pages.settings,{'id': customerId})">Settings</a></li>
<li role="separator" class="divider"></li>
<li><a href="./signin.html">Logout</a></li>
</ul>
</div>

<script>init();</script>


<!-- Bootstrap core JavaScript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script>window.jQuery || document.write('<script src="/static/js/jquery.min.js"></script></script>
<script src="/static/js/bootstrap.min.js"></script>
<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
<script src="/static/js/ie10-viewport-bug-workaround.js"></script>

</body>
