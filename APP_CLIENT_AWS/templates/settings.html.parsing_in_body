<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->

<title>VenYa Settings</title>

<!-- Bootstrap core CSS -->
<link href="/static/css/bootstrap.min.css" rel="stylesheet">
<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
<link href="/static/css/ie10-viewport-bug-workaround.css" rel="stylesheet">
<link href="/static/css/navbar.css" rel="stylesheet">
<script src="/static/js/ie-emulation-modes-warning.js"></script>
<link href="/static/css/arturo.css" rel="stylesheet">
</head>
<script type="text/javascript">
var urlParams = {};
var customerDetails = {};
var customerId;
var venya_server_ip = 192.168.99.100;
var venya_server_port = 8888;
//var emailFormat = new RegExp("^[^@]+@[^@]+\\.[^@]+$","g");
//var emailFormat = new RegExp("[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?","g");
var emailFormat = new RegExp("^\\w+([\\.-_]?\\w+)*@\\w+([\\.-_]?\\w+)*(\\.\\w{2,3})+$","g");
var usernameFormat = new RegExp("^\\w{8,}$","g");
var passwordFormat = new RegExp("^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$","g");
var phoneFormat = new RegExp("^(\\+|00)?[0-9]+$","g");
var objectidFormat = new RegExp("^[0-9a-fA-F]{24}$");
var postcodeFormat = new RegExp("^\\w+([\\s-]*\\w*)?$");
//var postcodeFormat = new RegExp("^[0-9]+$");

var pages = {
	"signin": "signin.html",
	"home": "home.html",
	"register": "register.html",
	"settings": "settings.html",
	"changeSettings": "changeSettings.html",
	"settingsPages": {
		"email": "changeEmail.html",
		"password": "changePassword.html",
		"times": "changeTimes.html",
		"username": "changeUsername.html",
		"address": "changeAddress.html",
		"times": "chamgeTimes.html"
	},
	"webcreatecustomer" : "web_create_customer.html",
	"webnewappointment" : "web_new_appointment.html"
}
var booleanField = {0: 0, "0": "0", 1: 1, "1": "1"};

var languages = ["ENG","ESP","FRA","GER"];

function parseUrl(callback){
	venya_server_ip = document.location.hostname; 
	//console.log("document.location.hostname = " + document.location.hostname);
	var params = document.location.search.replace(/^\?/,'').split('&');
	for (var i=0; i < params.length; i++) {
		var field = params[i].split('=')[0];
		var value = params[i].split('=')[1];
		urlParams[field] = value;
	}
	customerId = urlParams["id"];
	callback();
	//return venya_server_ip;
}

function setHeader(headType,message){
	var header = document.createElement(headType);
	header.appendChild(document.createTextNode(unescape(message.toUpperCase())));
	document.body.appendChild(header);
}

function goTo(page,params) {
	var target = "./" + page + "?";
	for (var param in params) {
		target += param + "=" + params[param] + "&";
	}
	location.href = target.replace(/[?&]$/,'');
}
/*
function createDataTable(){
	var table = document.createElement("table");
	for (var field in urlParams) {
		if (field != "action") {
			var row = document.createElement("tr");
			
			var fieldCell = document.createElement("td");
			fieldCell.appendChild(document.createTextNode(field));
			fieldCell.className = "field";
			row.appendChild(fieldCell);
			
			var valueCell = document.createElement("td");
			valueCell.appendChild(document.createTextNode(unescape(urlParams[field])));
			valueCell.className = "value";
			row.appendChild(valueCell);
			
			table.appendChild(row);
		}
	}
	document.body.appendChild(table);
}
*/
function createDataTable(tableData){
	if ( tableData == null ) tableData = urlParams;
	var table = document.createElement("table");
	for (var field in tableData) {
		if (field != "action") {
			var row = document.createElement("tr");
			
			var fieldCell = document.createElement("td");
			fieldCell.appendChild(document.createTextNode(field));
			fieldCell.className = "field";
			row.appendChild(fieldCell);
			
			var valueCell = document.createElement("td");
			
			var value = tableData[field];
			if ( field == "address" ) {
				var myAddress = "";
				for ( var elt in value ) {
					myAddress += value[elt] + ", ";
				}
				value = myAddress.replace(/, $/,'');				
			}
			
			//valueCell.appendChild(document.createTextNode(unescape(tableData[field])));
			valueCell.appendChild(document.createTextNode(unescape(value)));
			valueCell.className = "value";
			row.appendChild(valueCell);
			
			table.appendChild(row);
		}
	}
	document.body.appendChild(table);
}

function getCustomerDetails(action,id,callback) {
	venya_server_ip = document.location.hostname;
	var myUrl = "http://" + venya_server_ip + ":" + venya_server_port + "/getCustomer?action=" + action + "&id=" + id;
	var xhr = new XMLHttpRequest();
	xhr.open('GET',myUrl,true);
	xhr.send();
	xhr.onreadystatechange = processRequest;
	
	function processRequest(e) {
		if (xhr.readyState == 4) {
			if (xhr.status == 200) {
				console.log(xhr.responseText);
				var response = JSON.parse(xhr.responseText);
				for (var field in response) {
					if ( field != "status" ) {
						var value = response[field];
						if ( value == undefined ) value = "N/A";
						customerDetails[field] = response[field];
					}
				}
				callback();
			} else {
				var response = JSON.parse(xhr.responseText);
				var errorUrl = "./signin.html?status=" + response["status"] + "&errormessage=" + escape(response["errormessage"]);
				location.href=errorUrl;
			}
		}
	}
}

function getCustomerFullDetails(action,id,callback) {
	venya_server_ip = document.location.hostname;
	var myUrl = "http://" + venya_server_ip + ":" + venya_server_port + "/getCustomer?action=" + action + "&id=" + id;
	var xhr = new XMLHttpRequest();
	xhr.open('GET',myUrl,true);
	xhr.send();
	xhr.onreadystatechange = processRequest;
	
	function processRequest(e) {
		if (xhr.readyState == 4) {
			if (xhr.status == 200) {
				console.log(xhr.responseText);
				var response = JSON.parse(xhr.responseText);
				for (var field in response) {
					if ( field != "status" ) {
						var value = response[field];
						if ( value == undefined ) value = "N/A";
						customerDetails[field] = response[field];
					}
				}
				callback();
			} else {
				var response = JSON.parse(xhr.responseText);
				var errorUrl = "./signin.html?status=" + response["status"] + "&errormessage=" + escape(response["errormessage"]);
				location.href=errorUrl;
			}
		}
	}
}
</script>
<script src="/static/js/ionic-timepicker.bundle.min.js"></script>
<script type="text/javascript" src="/static/common/parsing.js"></script>
<script type="text/javascript">
var mySettings;

var venya_node_server = document.location.hostname;
var venya_node_port = 8888;
function init() {
parseUrl();

var action = urlParams["action"];
getCustomerFullDetails( action, urlParams["id"], function () {
customerId = customerDetails["_id"];
//console.log("customerId = " + customerId);

if ( action == "update" ) {
var updateField = urlParams["updatefield"];
setHeader("h2",updateField + " successfully updated");
}
var headerText = "SETTINGS for " + customerDetails["surname"].value.toUpperCase() + ", " + customerDetails["firstname"].value.toUpperCase();
setHeader("h2",headerText);
setHeader("h4","These are your settings:");
settings(displaySettings);
});
}

function update(values) {
var id = values["id"];
var field = values["field"];
var oldvalue = values["oldvalue"];
var newvalue = values["newvalue"];

var xhr = new XMLHttpRequest();
var myUrl = "http://" + venya_node_server + ":" + venya_node_port + "/updateSetting?action=update&id=" + id + "&field=" + field + "&newvalue=" + newvalue;
if ( oldvalue != undefined ) myUrl += "&oldvalue=" + oldvalue;
xhr.open('GET',myUrl,true);
//xhr.setRequestHeader('Access-Control-Allow-Origin','*');
xhr.send();
xhr.onreadystatechange = processRequest;

function processRequest(e) {
if (xhr.readyState == 4) {
if (xhr.status == 200) {
console.log(xhr.responseText);
var response = JSON.parse(xhr.responseText);
var successUrl = "./settings.html?updatefield=" + response["updatefield"];
console.log(response);
for (var field in response) {
if ( field != "status" ) {
var value = response[field];
if ( value == undefined ) value = "N/A";
successUrl += "&" + field.replace(/_/,'') + "=" + value;
}
}
location.href=successUrl;
//location.href=successUrl.replace(/&$/,'');
} else {
var response = JSON.parse(xhr.responseText);
var errorUrl = "./signin.html?status=" + response["status"] + "&errormessage=" + escape(response["errormessage"]);
location.href=errorUrl;
}
}
}
}

function displaySettings(settings) {
var cellsFormat = {
"valueCell": "text-align: center; padding-left: 15px; padding-right: 15px",
"settingCell": "text-align: left; padding-left: 15px; padding-right: 15px",
"optionCell": "width: 100%; display: inline-block; text-align: center"
}

var table = document.createElement("table");
var header = document.createElement("tr");
var headerTags = { "settingCell": "SETTING", "valueCell": "VALUE", "optionCell": "OPTION" };
for ( var type in headerTags ) {
var headCell = document.createElement("th");
headCell.appendChild(document.createTextNode(headerTags[type]));
headCell.setAttribute("style",cellsFormat[type]);
header.appendChild(headCell);
}
table.appendChild(header);
for (var field in settings) {
var value = settings[field];
if ( field == "address" ) {
var myAddress = "";
for ( var elt in value ) {
myAddress += value[elt] + ", ";
}
value = myAddress.replace(/, $/,'');
}
var newvalue;
var optionList = { "boolean": "ON/OFF", "string": "EDIT", "list": "SELECT" } ;
var option;
var buttonTarget;
var row = document.createElement("tr");
if ( settings[field] in booleanField ) {
//console.log(field + " is BOOLEAN / NUMBER");
option = optionList["boolean"];
if ( value == 0 || value == "0" ) { value = "OFF"; newvalue = 1 }
else { value = "ON"; newvalue = 0 }
buttonTarget = "javascript:update({'id': '" + customerId + "','field': '" + field + "', 'newvalue': '" + newvalue + "'})";
} else {
//console.log(field + " is STRING");
option = optionList["string"];
var gotoParams = {};
gotoParams["action"] = "update";
gotoParams["id"] = customerId;
gotoParams["setting"] = field;
var gotoPage = pages.settingsPages[field];
buttonTarget = "javascript:goTo("" + gotoPage + ""," + JSON.stringify(gotoParams) + ")";
}

var cells = { "settingCell": field, "valueCell": value };
for ( cell in cells ) {
var myCell = document.createElement("td");
myCell.setAttribute("style",cellsFormat[cell]);
myCell.appendChild(document.createTextNode(cells[cell]));
row.appendChild(myCell);
}

if ( field == "language" ) {
var optionCell = document.createElement("td");
optionCell.setAttribute["optionCell"];
var optionButton = document.createElement("BUTTON");
optionButton.setAttribute("id",field);

option = optionList["list"];
optionButton.setAttribute("class","dropdown-toggle");
optionButton.setAttribute("data-toggle","dropdown");
optionButton.setAttribute("aria-haspopup","true");
optionButton.setAttribute("aria-expanded","false");

var ul = document.createElement("ul");
ul.setAttribute("class","dropdown-menu");
ul.setAttribute("aria-labelledby",field);

for ( var i in languages ) {
var lang = languages[i];
var li = document.createElement("li");
var link = document.createElement("a");
link.setAttribute("href","javascript:update({'id': '" + customerId + "','field': '" + field + "', 'newvalue': '" + lang + "'})");
link.appendChild(document.createTextNode(lang));
li.appendChild(link);
ul.appendChild(li);
}
optionCell.appendChild(ul);
optionButton.appendChild(document.createTextNode(option));
optionCell.appendChild(optionButton);
} else {
var optionCell = document.createElement("td");
optionCell.setAttribute["optionCell"];

var optionForm = document.createElement("form");
optionForm.setAttribute("name",field);
optionForm.setAttribute("action",buttonTarget);

var optionButton = document.createElement("input");
optionButton.setAttribute("id","option");
optionButton.setAttribute("type","submit");
optionButton.setAttribute("name",field);
optionButton.setAttribute("value",field);
optionForm.appendChild(optionButton);
optionCell.appendChild(optionForm);
}
row.appendChild(optionCell);
table.appendChild(row);
}
document.body.appendChild(table);
}

function settings(callback) {
var mySettings = {};
for ( field in customerDetails ) {
if ( customerDetails[field].fix == 0 ) {
mySettings[field] = customerDetails[field].value;
console.log("Adding " + field + " to settings");
}
}
if ( callback != null ) { callback(mySettings) }
else { createDataTable(mySettings) }
}

function onoff(id,field) {

}
</script>
<header>
</header>
<body>
<div class="dropdown">
<button class="btn btn-default dropdown-toggle pull-right" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
MENU
<span class="caret"></span>
</button>
<ul class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenu1">
<!-- <li><a href="./home.html?action=home&name=Arturo">Home</a></li> -->
<li><a href="javascript:goTo(pages.home,{'action': 'home', 'id': customerId})">Home</a></li>
<li><a href="javascript:goTo(pages.appointments)">Appointments</a></li>
<li><a href="javascript:goTo(pages.notifications)">Notifications</a></li>
<li><a href="javascript:goTo(pages.settings,{'id': customerId})">Settings</a></li>
<li role="separator" class="divider"></li>
<li><a href="./signin.html">Logout</a></li>
</ul>
</div>

<script>init();</script>


<!-- Bootstrap core JavaScript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script>window.jQuery || document.write('<script src="/static/js/jquery.min.js"></script>')</script>
<script src="/static/js/bootstrap.min.js"></script>
<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
<script src="/static/js/ie10-viewport-bug-workaround.js"></script>

</body>
